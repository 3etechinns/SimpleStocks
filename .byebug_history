exit
id
c
all_deposits
c
all_deposits
c
all_deposits
c
filtered
filtered.length
c
filtered.length
filtered
c
filtered.length
filtered
c
filtered
exit
five_year_response[order.ticker]["chart"][0]
five_year_response[order.ticker]["chart"]
five_year_response[order.ticker].keys
five_year_response[order.ticker].chart
five_year_response[order.ticker]
five_year_response
fiver_year_response
c
exit
DateTime.parse("September 17, 2019") < orders.first.created_at
DateTime.parse("September 17, 2019") > orders.first.created_at
orders.first.created_at < orders.second.created_at
orders.first.created_at > orders.second.created_at
orders.first.created_at > ordesr.second.created_at
orders.second.created_at
orders.second
orders.first.created_at
orders.first.created_at.class
orders.first.created_at
DateTime.parse(orders.first.created_at)
Date_Time.parse(orders.first.created_at)
orders.first.created_at
orders.first
orders.keys
orders.first.ticker
orders.first
orders["ticker"]
orders
total_shares_value
exit
date3 > date2
date2 > date3
date1 > date3
date2 > date2
date1 > date2
date3 = DateTime.parse(date3)
date2 = DateTime.parse(date2)
date1 = DateTime.parse(response["AAPL"]["quote"]["latestTime"])
date1
date3 = "February 17, 2017"
date2 = "September 10, 2019"
response["AAPL"]["quote"]["latestTime"]
DateTime.parse(response["AAPL"]["quote"]["latestTime"]) >
date1 = Date.new(response["AAPL"]["quote"]["latestTime"])
response["AAPL"]["quote"]["latestTime"].class
response["AAPL"]["quote"]["latestTime"].type
response["AAPL"]["quote"]["latestTime"]
response["AAPL"]["quote"]
response["AAPL"]
exit
response.keys
response["AAPL"]
stock[1]["quote"]
stock
exit
response
exit
stock[1]["quote"]["latestPrice"]
stock[1]["quote"][latestPrice]
stock[1]["quote"][lastestPrice]
stock[1].quote
stock[1]["quote"]
stock[1].quote
stock[1]
stock.quote
stock["AAPL"]
stock
exit
response
exit
request
exit
url + shares.keys.join(',')
shares.keys.join(',')
shares.keys.join()
shares
exit
shares["GOOG"]
shares["GOOGL"]
shares["AAPL"]
shares
exit
    end
      end
        shares[order] -= order.shares
      else 
        shares[order] += order.shares
      if order.order_type === "BUY" 
    orders.each do |order|
    shares = Hash.new(0)
    shares
    end
      end
        shares[order] -= order.shares
      else 
        shares[order] += order.shares
      if order.order_type === "BUY" 
    orders.each do |order|
    shares = Hash.new(0)
orders.each do |order| puts order end
orders.includes(ticker: "AAPL")
orders.includes(:ticker)
orders.includes(ticker)
orders
\orders
order
c
shares
price
c
q
Watch.find(params[:id])
params
Watch.all
c
res.select { |ticker, shares| shares > 0 }
res
res["GOOG"] = -4
res.select { |ticker, shares| shares > 0 }
res.select! { |ticker, shares| shares > 0 }
res
c
overall_profit
all_deposits
exit
y
q
n
all_deposits
overall_profit
c
n
current_user
@order.user_id
order_params
q
n
params.require(:order)
params.require(:orders)
params.orders
params.order
